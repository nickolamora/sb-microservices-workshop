{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
###########\cb1 \
\cb3 # ECLIPSE #\cb1 \
\cb3 ###########\cb1 \
\cb3 \'a0\cb1 \
\cb3 .toDelete\cb1 \
\cb3 .metadata\cb1 \
\cb3 bin/\cb1 \
\cb3 tmp/\cb1 \
\cb3 *.tmp\cb1 \
\cb3 *.bak\cb1 \
\cb3 *.swp\cb1 \
\cb3 *~.nib\cb1 \
\cb3 local.properties\cb1 \
\cb3 .settings/\cb1 \
\cb3 .loadpath\cb1 \
\cb3 .recommenders\cb1 \
\cb3 .project\cb1 \
\cb3 \'a0\cb1 \
\cb3 # External tool builders\cb1 \
\cb3 .externalToolBuilders/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Locally stored "Eclipse launch configurations"\cb1 \
\cb3 *.launch\cb1 \
\cb3 \'a0\cb1 \
\cb3 # PyDev specific (Python IDE for Eclipse)\cb1 \
\cb3 *.pydevproject\cb1 \
\cb3 \'a0\cb1 \
\cb3 # CDT-specific (C/C++ Development Tooling)\cb1 \
\cb3 .cproject\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Java annotation processor (APT)\cb1 \
\cb3 .factorypath\cb1 \
\cb3 \'a0\cb1 \
\cb3 # PDT-specific (PHP Development Tools)\cb1 \
\cb3 .buildpath\cb1 \
\cb3 \'a0\cb1 \
\cb3 # sbteclipse plugin\cb1 \
\cb3 .target\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Tern plugin\cb1 \
\cb3 .tern-project\cb1 \
\cb3 \'a0\cb1 \
\cb3 # TeXlipse plugin\cb1 \
\cb3 .texlipse\cb1 \
\cb3 \'a0\cb1 \
\cb3 # STS (Spring Tool Suite)\cb1 \
\cb3 .springBeans\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Code Recommenders\cb1 \
\cb3 .recommenders/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Scala IDE specific (Scala & Java development for Eclipse)\cb1 \
\cb3 .cache-main\cb1 \
\cb3 .scala_dependencies\cb1 \
\cb3 .worksheet\cb1 \
\cb3 \'a0\cb1 \
\cb3 ################\cb1 \
\cb3 # JAVA / SCALA #\cb1 \
\cb3 ################\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Compiled class file\cb1 \
\cb3 *.class\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Log file\cb1 \
\cb3 *.log\cb1 \
\cb3 \'a0\cb1 \
\cb3 # BlueJ files\cb1 \
\cb3 *.ctxt\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Mobile Tools for Java (J2ME)\cb1 \
\cb3 .mtj.tmp/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Package Files #\cb1 \
\cb3 *.jar\cb1 \
\cb3 *.war\cb1 \
\cb3 *.ear\cb1 \
\cb3 *.zip\cb1 \
\cb3 *.tar.gz\cb1 \
\cb3 *.rar\cb1 \
\cb3 \'a0\cb1 \
\cb3 # virtual machine crash logs, see {\field{\*\fldinst{HYPERLINK "http://www.java.com/en/download/help/error_hotspot.xml"}}{\fldrslt http://www.java.com/en/download/help/error_hotspot.xml}}\cb1 \
\cb3 hs_err_pid*\cb1 \
\cb3 \'a0\cb1 \
\cb3 #############\cb1 \
\cb3 # JETBRAINS #\cb1 \
\cb3 #############\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\cb1 \
\cb3 # Reference: {\field{\*\fldinst{HYPERLINK "https://intellij-support.jetbrains.com/hc/en-us/articles/206544839"}}{\fldrslt https://intellij-support.jetbrains.com/hc/en-us/articles/206544839}}\cb1 \
\cb3 \'a0\cb1 \
\cb3 # User-specific stuff:\cb1 \
\cb3 .idea/\cb1 \
\cb3 .idea/**/workspace.xml\cb1 \
\cb3 .idea/**/tasks.xml\cb1 \
\cb3 .idea/dictionaries\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Sensitive or high-churn files:\cb1 \
\cb3 .idea/**/dataSources/\cb1 \
\cb3 .idea/**/dataSources.ids\cb1 \
\cb3 .idea/**/dataSources.xml\cb1 \
\cb3 .idea/**/dataSources.local.xml\cb1 \
\cb3 .idea/**/sqlDataSources.xml\cb1 \
\cb3 .idea/**/dynamic.xml\cb1 \
\cb3 .idea/**/uiDesigner.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Gradle:\cb1 \
\cb3 .idea/**/gradle.xml\cb1 \
\cb3 .idea/**/libraries\cb1 \
\cb3 \'a0\cb1 \
\cb3 # CMake\cb1 \
\cb3 cmake-build-debug/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Mongo Explorer plugin:\cb1 \
\cb3 .idea/**/mongoSettings.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 ## File-based project format:\cb1 \
\cb3 *.iws\cb1 \
\cb3 *.iml\cb1 \
\cb3 \'a0\cb1 \
\cb3 ## Plugin-specific files:\cb1 \
\cb3 \'a0\cb1 \
\cb3 # IntelliJ\cb1 \
\cb3 out/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # mpeltonen/sbt-idea plugin\cb1 \
\cb3 .idea_modules/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # JIRA plugin\cb1 \
\cb3 atlassian-ide-plugin.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Cursive Clojure plugin\cb1 \
\cb3 .idea/replstate.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Crashlytics plugin (for Android Studio and IntelliJ)\cb1 \
\cb3 com_crashlytics_export_strings.xml\cb1 \
\cb3 crashlytics.properties\cb1 \
\cb3 crashlytics-build.properties\cb1 \
\cb3 fabric.properties\cb1 \
\cb3 \'a0\cb1 \
\cb3 ##########\cb1 \
\cb3 # MACOS #\cb1 \
\cb3 ##########\cb1 \
\cb3 \'a0\cb1 \
\cb3 .DS_Store\cb1 \
\cb3 .AppleDouble\cb1 \
\cb3 .LSOverride\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Icon must end with two \\r\cb1 \
\cb3 Icon\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Thumbnails\cb1 \
\cb3 ._*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Files that might appear in the root of a volume\cb1 \
\cb3 .DocumentRevisions-V100\cb1 \
\cb3 .fseventsd\cb1 \
\cb3 .Spotlight-V100\cb1 \
\cb3 .TemporaryItems\cb1 \
\cb3 .Trashes\cb1 \
\cb3 .VolumeIcon.icns\cb1 \
\cb3 .com.apple.timemachine.donotpresent\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Directories potentially created on remote AFP share\cb1 \
\cb3 .AppleDB\cb1 \
\cb3 .AppleDesktop\cb1 \
\cb3 Network Trash Folder\cb1 \
\cb3 Temporary Items\cb1 \
\cb3 .apdisk\cb1 \
\cb3 \'a0\cb1 \
\cb3 #########\cb1 \
\cb3 # MAVEN #\cb1 \
\cb3 #########\cb1 \
\cb3 \'a0\cb1 \
\cb3 target/\cb1 \
\cb3 pom.xml.tag\cb1 \
\cb3 pom.xml.releaseBackup\cb1 \
\cb3 pom.xml.versionsBackup\cb1 \
\cb3 pom.xml.next\cb1 \
\cb3 release.properties\cb1 \
\cb3 dependency-reduced-pom.xml\cb1 \
\cb3 buildNumber.properties\cb1 \
\cb3 .mvn/timing.properties\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Avoid ignoring Maven wrapper jar file (.jar files are usually ignored)\cb1 \
\cb3 !/.mvn/wrapper/maven-wrapper.jar\cb1 \
\cb3 \'a0\cb1 \
\cb3 ############\cb1 \
\cb3 # NETBEANS #\cb1 \
\cb3 ############\cb1 \
\cb3 \'a0\cb1 \
\cb3 nbproject/private/\cb1 \
\cb3 build/\cb1 \
\cb3 nbbuild/\cb1 \
\cb3 dist/\cb1 \
\cb3 nbdist/\cb1 \
\cb3 .nb-gradle/\cb1 \
\cb3 \'a0\cb1 \
\cb3 ########\cb1 \
\cb3 # NODE #\cb1 \
\cb3 ########\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Logs\cb1 \
\cb3 logs\cb1 \
\cb3 *.log\cb1 \
\cb3 npm-debug.log*\cb1 \
\cb3 yarn-debug.log*\cb1 \
\cb3 yarn-error.log*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Runtime data\cb1 \
\cb3 pids\cb1 \
\cb3 *.pid\cb1 \
\cb3 *.seed\cb1 \
\cb3 *.pid.lock\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Directory for instrumented libs generated by jscoverage/JSCover\cb1 \
\cb3 lib-cov\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Coverage directory used by tools like istanbul\cb1 \
\cb3 coverage\cb1 \
\cb3 \'a0\cb1 \
\cb3 # nyc test coverage\cb1 \
\cb3 .nyc_output\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Grunt intermediate storage ({\field{\*\fldinst{HYPERLINK "http://gruntjs.com/creating-plugins#storing-task-files)"}}{\fldrslt http://gruntjs.com/creating-plugins#storing-task-files)}}\cb1 \
\cb3 .grunt\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Bower dependency directory ({\field{\*\fldinst{HYPERLINK "https://bower.io/)"}}{\fldrslt https://bower.io/)}}\cb1 \
\cb3 bower_components\cb1 \
\cb3 \'a0\cb1 \
\cb3 # node-waf configuration\cb1 \
\cb3 .lock-wscript\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Compiled binary addons ({\field{\*\fldinst{HYPERLINK "https://nodejs.org/api/addons.html)"}}{\fldrslt https://nodejs.org/api/addons.html)}}\cb1 \
\cb3 build/Release\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Dependency directories\cb1 \
\cb3 node_modules/\cb1 \
\cb3 jspm_packages/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Typescript v1 declaration files\cb1 \
\cb3 typings/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Optional npm cache directory\cb1 \
\cb3 .npm\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Optional eslint cache\cb1 \
\cb3 .eslintcache\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Optional REPL history\cb1 \
\cb3 .node_repl_history\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Output of 'npm pack'\cb1 \
\cb3 *.tgz\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Yarn Integrity file\cb1 \
\cb3 .yarn-integrity\cb1 \
\cb3 \'a0\cb1 \
\cb3 # dotenv environment variables file\cb1 \
\cb3 .env\cb1 \
\cb3 \'a0\cb1 \
\cb3 #######\cb1 \
\cb3 # SBT #\cb1 \
\cb3 #######\cb1 \
\cb3 \'a0\cb1 \
\cb3 dist/*\cb1 \
\cb3 target/\cb1 \
\cb3 lib_managed/\cb1 \
\cb3 src_managed/\cb1 \
\cb3 project/boot/\cb1 \
\cb3 project/plugins/project/\cb1 \
\cb3 .history\cb1 \
\cb3 .cache\cb1 \
\cb3 .lib/\cb1 \
\cb3 \'a0\cb1 \
\cb3 ###########\cb1 \
\cb3 # SUBLIME #\cb1 \
\cb3 ###########\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Cache files for Sublime Text\cb1 \
\cb3 *.tmlanguage.cache\cb1 \
\cb3 *.tmPreferences.cache\cb1 \
\cb3 *.stTheme.cache\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Workspace files are user-specific\cb1 \
\cb3 *.sublime-workspace\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Project files should be checked into the repository, unless a significant\cb1 \
\cb3 # proportion of contributors will probably not be using Sublime Text\cb1 \
\cb3 # *.sublime-project\cb1 \
\cb3 \'a0\cb1 \
\cb3 # SFTP configuration file\cb1 \
\cb3 sftp-config.json\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Package control specific files\cb1 \
\cb3 Package Control.last-run\cb1 \
\cb3 Package Control.ca-list\cb1 \
\cb3 Package Control.ca-bundle\cb1 \
\cb3 Package Control.system-ca-bundle\cb1 \
\cb3 Package Control.cache/\cb1 \
\cb3 Package Control.ca-certs/\cb1 \
\cb3 Package Control.merged-ca-bundle\cb1 \
\cb3 Package Control.user-ca-bundle\cb1 \
\cb3 oscrypto-ca-bundle.crt\cb1 \
\cb3 bh_unicode_properties.cache\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Sublime-github package stores a github token in this file\cb1 \
\cb3 # {\field{\*\fldinst{HYPERLINK "https://packagecontrol.io/packages/sublime-github"}}{\fldrslt https://packagecontrol.io/packages/sublime-github}}\cb1 \
\cb3 GitHub.sublime-settings\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 ########\cb1 \
\cb3 # ATOM #\cb1 \
\cb3 ########\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 *.swp\cb1 \
\cb3 *~\cb1 \
\cb3 .DS_Store\cb1 \
\cb3 Thumbs.db\cb1 \
\cb3 .project\cb1 \
\cb3 .svn\cb1 \
\cb3 .nvm-version\cb1 \
\cb3 node_modules\cb1 \
\cb3 npm-debug.log\cb1 \
\cb3 debug.log\cb1 \
\cb3 /tags\cb1 \
\cb3 /atom-shell/\cb1 \
\cb3 /out/\cb1 \
\cb3 docs/output\cb1 \
\cb3 docs/includes\cb1 \
\cb3 spec/fixtures/evil-files/\cb1 \
\cb3 out/\cb1 \
\cb3 /electron/\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 ######################\cb1 \
\cb3 # VISUAL STUDIO CODE #\cb1 \
\cb3 ######################\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 ## Ignore Visual Studio temporary files, build results, and\cb1 \
\cb3 ## files generated by popular Visual Studio add-ons.\cb1 \
\cb3 ##\cb1 \
\cb3 ## Get latest from {\field{\*\fldinst{HYPERLINK "https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"}}{\fldrslt https://github.com/github/gitignore/blob/master/VisualStudio.gitignore}}\cb1 \
\cb3 \'a0\cb1 \
\cb3 # User-specific files\cb1 \
\cb3 *.suo\cb1 \
\cb3 *.user\cb1 \
\cb3 *.userosscache\cb1 \
\cb3 *.sln.docstates\cb1 \
\cb3 \'a0\cb1 \
\cb3 # User-specific files (MonoDevelop/Xamarin Studio)\cb1 \
\cb3 *.userprefs\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Build results\cb1 \
\cb3 [Dd]ebug/\cb1 \
\cb3 [Dd]ebugPublic/\cb1 \
\cb3 [Rr]elease/\cb1 \
\cb3 [Rr]eleases/\cb1 \
\cb3 x64/\cb1 \
\cb3 x86/\cb1 \
\cb3 bld/\cb1 \
\cb3 [Bb]in/\cb1 \
\cb3 [Oo]bj/\cb1 \
\cb3 [Ll]og/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio 2015/2017 cache/options directory\cb1 \
\cb3 .vs/\cb1 \
\cb3 # Uncomment if you have tasks that create the project's static files in wwwroot\cb1 \
\cb3 #wwwroot/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio 2017 auto generated files\cb1 \
\cb3 Generated\\ Files/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # MSTest test Results\cb1 \
\cb3 [Tt]est[Rr]esult*/\cb1 \
\cb3 [Bb]uild[Ll]og.*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # NUNIT\cb1 \
\cb3 *.VisualState.xml\cb1 \
\cb3 TestResult.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Build Results of an ATL Project\cb1 \
\cb3 [Dd]ebugPS/\cb1 \
\cb3 [Rr]eleasePS/\cb1 \
\cb3 dlldata.c\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Benchmark Results\cb1 \
\cb3 BenchmarkDotNet.Artifacts/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # .NET Core\cb1 \
\cb3 project.lock.json\cb1 \
\cb3 project.fragment.lock.json\cb1 \
\cb3 artifacts/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # StyleCop\cb1 \
\cb3 StyleCopReport.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Files built by Visual Studio\cb1 \
\cb3 *_i.c\cb1 \
\cb3 *_p.c\cb1 \
\cb3 *_i.h\cb1 \
\cb3 *.ilk\cb1 \
\cb3 *.meta\cb1 \
\cb3 *.obj\cb1 \
\cb3 *.iobj\cb1 \
\cb3 *.pch\cb1 \
\cb3 *.pdb\cb1 \
\cb3 *.ipdb\cb1 \
\cb3 *.pgc\cb1 \
\cb3 *.pgd\cb1 \
\cb3 *.rsp\cb1 \
\cb3 *.sbr\cb1 \
\cb3 *.tlb\cb1 \
\cb3 *.tli\cb1 \
\cb3 *.tlh\cb1 \
\cb3 *.tmp\cb1 \
\cb3 *.tmp_proj\cb1 \
\cb3 *.log\cb1 \
\cb3 *.vspscc\cb1 \
\cb3 *.vssscc\cb1 \
\cb3 .builds\cb1 \
\cb3 *.pidb\cb1 \
\cb3 *.svclog\cb1 \
\cb3 *.scc\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Chutzpah Test files\cb1 \
\cb3 _Chutzpah*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual C++ cache files\cb1 \
\cb3 ipch/\cb1 \
\cb3 *.aps\cb1 \
\cb3 *.ncb\cb1 \
\cb3 *.opendb\cb1 \
\cb3 *.opensdf\cb1 \
\cb3 *.sdf\cb1 \
\cb3 *.cachefile\cb1 \
\cb3 *.VC.db\cb1 \
\cb3 *.VC.VC.opendb\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio profiler\cb1 \
\cb3 *.psess\cb1 \
\cb3 *.vsp\cb1 \
\cb3 *.vspx\cb1 \
\cb3 *.sap\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio Trace Files\cb1 \
\cb3 *.e2e\cb1 \
\cb3 \'a0\cb1 \
\cb3 # TFS 2012 Local Workspace\cb1 \
\cb3 $tf/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Guidance Automation Toolkit\cb1 \
\cb3 *.gpState\cb1 \
\cb3 \'a0\cb1 \
\cb3 # ReSharper is a .NET coding add-in\cb1 \
\cb3 _ReSharper*/\cb1 \
\cb3 *.[Rr]e[Ss]harper\cb1 \
\cb3 *.DotSettings.user\cb1 \
\cb3 \'a0\cb1 \
\cb3 # JustCode is a .NET coding add-in\cb1 \
\cb3 .JustCode\cb1 \
\cb3 \'a0\cb1 \
\cb3 # TeamCity is a build add-in\cb1 \
\cb3 _TeamCity*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # DotCover is a Code Coverage Tool\cb1 \
\cb3 *.dotCover\cb1 \
\cb3 \'a0\cb1 \
\cb3 # AxoCover is a Code Coverage Tool\cb1 \
\cb3 .axoCover/*\cb1 \
\cb3 !.axoCover/settings.json\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio code coverage results\cb1 \
\cb3 *.coverage\cb1 \
\cb3 *.coveragexml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # NCrunch\cb1 \
\cb3 _NCrunch_*\cb1 \
\cb3 .*crunch*.local.xml\cb1 \
\cb3 nCrunchTemp_*\cb1 \
\cb3 \'a0\cb1 \
\cb3 # MightyMoose\cb1 \
\cb3 *.mm.*\cb1 \
\cb3 AutoTest.Net/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Web workbench (sass)\cb1 \
\cb3 .sass-cache/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Installshield output folder\cb1 \
\cb3 [Ee]xpress/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # DocProject is a documentation generator add-in\cb1 \
\cb3 DocProject/buildhelp/\cb1 \
\cb3 DocProject/Help/*.HxT\cb1 \
\cb3 DocProject/Help/*.HxC\cb1 \
\cb3 DocProject/Help/*.hhc\cb1 \
\cb3 DocProject/Help/*.hhk\cb1 \
\cb3 DocProject/Help/*.hhp\cb1 \
\cb3 DocProject/Help/Html2\cb1 \
\cb3 DocProject/Help/html\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Click-Once directory\cb1 \
\cb3 publish/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Publish Web Output\cb1 \
\cb3 *.[Pp]ublish.xml\cb1 \
\cb3 *.azurePubxml\cb1 \
\cb3 # Note: Comment the next line if you want to checkin your web deploy settings,\cb1 \
\cb3 # but database connection strings (with potential passwords) will be unencrypted\cb1 \
\cb3 *.pubxml\cb1 \
\cb3 *.publishproj\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Microsoft Azure Web App publish settings. Comment the next line if you want to\cb1 \
\cb3 # checkin your Azure Web App publish settings, but sensitive information contained\cb1 \
\cb3 # in these scripts will be unencrypted\cb1 \
\cb3 PublishScripts/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # NuGet Packages\cb1 \
\cb3 *.nupkg\cb1 \
\cb3 # The packages folder can be ignored because of Package Restore\cb1 \
\cb3 **/[Pp]ackages/*\cb1 \
\cb3 # except build/, which is used as an MSBuild target.\cb1 \
\cb3 !**/[Pp]ackages/build/\cb1 \
\cb3 # Uncomment if necessary however generally it will be regenerated when needed\cb1 \
\cb3 #!**/[Pp]ackages/repositories.config\cb1 \
\cb3 # NuGet v3's project.json files produces more ignorable files\cb1 \
\cb3 *.nuget.props\cb1 \
\cb3 *.nuget.targets\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Microsoft Azure Build Output\cb1 \
\cb3 csx/\cb1 \
\cb3 *.build.csdef\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Microsoft Azure Emulator\cb1 \
\cb3 ecf/\cb1 \
\cb3 rcf/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Windows Store app package directories and files\cb1 \
\cb3 AppPackages/\cb1 \
\cb3 BundleArtifacts/\cb1 \
\cb3 Package.StoreAssociation.xml\cb1 \
\cb3 _pkginfo.txt\cb1 \
\cb3 *.appx\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio cache files\cb1 \
\cb3 # files ending in .cache can be ignored\cb1 \
\cb3 *.[Cc]ache\cb1 \
\cb3 # but keep track of directories ending in .cache\cb1 \
\cb3 !*.[Cc]ache/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Others\cb1 \
\cb3 ClientBin/\cb1 \
\cb3 ~$*\cb1 \
\cb3 *~\cb1 \
\cb3 *.dbmdl\cb1 \
\cb3 *.dbproj.schemaview\cb1 \
\cb3 *.jfm\cb1 \
\cb3 *.pfx\cb1 \
\cb3 *.publishsettings\cb1 \
\cb3 orleans.codegen.cs\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Including strong name files can present a security risk\cb1 \
\cb3 # ({\field{\*\fldinst{HYPERLINK "https://github.com/github/gitignore/pull/2483#issue-259490424)"}}{\fldrslt https://github.com/github/gitignore/pull/2483#issue-259490424)}}\cb1 \
\cb3 #*.snk\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Since there are multiple workflows, uncomment next line to ignore bower_components\cb1 \
\cb3 # ({\field{\*\fldinst{HYPERLINK "https://github.com/github/gitignore/pull/1529#issuecomment-104372622)"}}{\fldrslt https://github.com/github/gitignore/pull/1529#issuecomment-104372622)}}\cb1 \
\cb3 #bower_components/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # RIA/Silverlight projects\cb1 \
\cb3 Generated_Code/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Backup & report files from converting an old project file\cb1 \
\cb3 # to a newer Visual Studio version. Backup files are not needed,\cb1 \
\cb3 # because we have git ;-)\cb1 \
\cb3 _UpgradeReport_Files/\cb1 \
\cb3 Backup*/\cb1 \
\cb3 UpgradeLog*.XML\cb1 \
\cb3 UpgradeLog*.htm\cb1 \
\cb3 ServiceFabricBackup/\cb1 \
\cb3 *.rptproj.bak\cb1 \
\cb3 \'a0\cb1 \
\cb3 # SQL Server files\cb1 \
\cb3 *.mdf\cb1 \
\cb3 *.ldf\cb1 \
\cb3 *.ndf\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Business Intelligence projects\cb1 \
\cb3 *.rdl.data\cb1 \
\cb3 *.bim.layout\cb1 \
\cb3 *.bim_*.settings\cb1 \
\cb3 *.rptproj.rsuser\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Microsoft Fakes\cb1 \
\cb3 FakesAssemblies/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # GhostDoc plugin setting file\cb1 \
\cb3 *.GhostDoc.xml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Node.js Tools for Visual Studio\cb1 \
\cb3 .ntvs_analysis.dat\cb1 \
\cb3 node_modules/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio 6 build log\cb1 \
\cb3 *.plg\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio 6 workspace options file\cb1 \
\cb3 *.opt\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\cb1 \
\cb3 *.vbw\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Visual Studio LightSwitch build output\cb1 \
\cb3 **/*.HTMLClient/GeneratedArtifacts\cb1 \
\cb3 **/*.DesktopClient/GeneratedArtifacts\cb1 \
\cb3 **/*.DesktopClient/ModelManifest.xml\cb1 \
\cb3 **/*.Server/GeneratedArtifacts\cb1 \
\cb3 **/*.Server/ModelManifest.xml\cb1 \
\cb3 _Pvt_Extensions\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Paket dependency manager\cb1 \
\cb3 .paket/paket.exe\cb1 \
\cb3 paket-files/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # FAKE - F# Make\cb1 \
\cb3 .fake/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # JetBrains Rider\cb1 \
\cb3 .idea/\cb1 \
\cb3 *.sln.iml\cb1 \
\cb3 \'a0\cb1 \
\cb3 # CodeRush\cb1 \
\cb3 .cr/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Python Tools for Visual Studio (PTVS)\cb1 \
\cb3 __pycache__/\cb1 \
\cb3 *.pyc\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Cake - Uncomment if you are using it\cb1 \
\cb3 # tools/**\cb1 \
\cb3 # !tools/packages.config\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Tabs Studio\cb1 \
\cb3 *.tss\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Telerik's JustMock configuration file\cb1 \
\cb3 *.jmconfig\cb1 \
\cb3 \'a0\cb1 \
\cb3 # BizTalk build output\cb1 \
\cb3 *.btp.cs\cb1 \
\cb3 *.btm.cs\cb1 \
\cb3 *.odx.cs\cb1 \
\cb3 *.xsd.cs\cb1 \
\cb3 \'a0\cb1 \
\cb3 # OpenCover UI analysis results\cb1 \
\cb3 OpenCover/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # Azure Stream Analytics local run output\cb1 \
\cb3 ASALocalRun/\cb1 \
\cb3 \'a0\cb1 \
\cb3 # MSBuild Binary and Structured Log\cb1 \
\cb3 *.binlog\cb1 \
\cb3 \'a0\cb1 \
\cb3 # NVidia Nsight GPU debugger configuration file\cb1 \
\cb3 *.nvuser\cb1 \
\cb3 \'a0\cb1 \
\cb3 # MFractors (Xamarin productivity tool) working folder\cb1 \
\cb3 .mfractor/}